<%-include('header')-%>

    <div class="container">
        <div class="col-sm-6 col-sm-offset-3">

            <h1>Add Product</h1>
            <!-- LOGIN FORM -->
            <form action="/admin/add-product" method="post" enctype="multipart/form-data">
                <div class="form-group">
                    <label class="fs-4">Name</label>
                    <input type="text" class="form-control fs-4" name="name">
                </div>

                <div class="form-group">
                    <label class="fs-4">Description</label>
                    <input type="text" class="form-control fs-4" name="description">
                </div>

                <div class="form-group">
                    <label class="fs-4">Price</label>
                    <input type="text" class="form-control fs-4" name="price">
                </div>
                <!-- Example single danger button -->

                <label for="cars" class="fs-4">Category:</label>
                <br><br>
                <select class="form-select form-select-lg mb-3" name="category">
                    <%categories.forEach((element)=>{%>
                        <option value="<%=element.name%>">
                            <%=element.name%>
                        </option>
                        <%})%>
                </select>
                <br><br>
                <div class="form-group">
                    <label for="">Image</label>
                    <input type="file" class="form-control fs-4 " name="image">
                </div>
                <div class="form-group">
                    <input type="file" class="form-control fs-4 " name="images">
                </div>
                <!-- <div class="form-group">
                    <input type="file" class="form-control fs-4 " name="imagess">
                </div>
                <div class="form-group">
                    <input type="file" class="form-control fs-4 " name="imagesss">
                </div> -->

                <label for="name"></label><br>

                <div id="crop">
                    <img id="imgView1" src="" alt="" style="height: 100px;width:120px;" class="clr" hidden>
                    <div class="vald-info" id="info"></div>
                    <h5 class="error_form text-danger" id="image1_error_message"></h5>
                    <div style="display: flex">
                        <div id="image-box1" class="image-container clr" style="height: 300px; width: 20%"></div>
                        <button type="button" class="btn btneds" id="crop-btn1"
                            style=" margin-top: 10px; display: none; width: 50%; margin: 20rem 0rem 0rem 0rem;" onclick="appear()">crop</button>
                    </div>
                </div>
                <input type="file" name="imagess" class="form-control" id="id_image1" onchange="changeImg(event)"><br>

                <label for="name"></label><br>

                <div id="crop">
                    <img id="imgView2" src="" alt="" style="height: 100px;width:120px;" class="clr" hidden>
                    <div class="vald-info" id="info"></div>
                    <h5 class="error_form text-danger" id="image2_error_message"></h5>
                    <div style="display: flex">
                        <div id="image-box2" class="image-container clr" style="height: 300px; width: 20%"></div>
                        <button type="button" class="btn btneds" id="crop-btn2"
                            style=" margin-top: 10px; display: none; width: 50%; margin: 20rem 0rem 0rem 0rem;">crop</button>
                    </div>
                </div>

                <input type="file" name="imagesss" class="form-control" onchange="changeImg2(event)" id="id_image2"><br>

                <button type="submit" class="btn btn-warning btn-lg fs-4">Add Product</button>


            </form>

            <hr>
        </div>
    </div>

    <script>

        function changeImg(event) {
            // .src = URL.createObjectURL(event.target.files[0])
           let a =  document.getElementById('imgView1')
           a.src = URL.createObjectURL(event.target.files[0])
           a.style.display = 'block'

        }
        function appear() {
            console.log('this is appear');
            let a =  document.getElementById('imgView1')
            a.style.display = 'block'
            console.log(a);

        }
        const imagebox1 = document.getElementById("image-box1");
        const crop_btn1 = document.getElementById("crop-btn1");
        const input1 = document.getElementById("id_image1");

        // When user uploads the image this event will get triggered
        input1.addEventListener("change", () => {
            // Getting image file object from the input variable
            const img_data1 = input1.files[0];
            // createObjectURL() static method creates a DOMString containing a URL representing the object given in the parameter.
            // The new object URL represents the specified File object or Blob object.
            const url1 = URL.createObjectURL(img_data1);
            // Creating a image tag inside imagebox which will hold the cropping view image(uploaded file) to it using the url created before.
            imagebox1.innerHTML = `<img src="${url1}" id="imagess" style="width:100%;">`;
            // Storing that cropping view image in a variable
            const image1 = document.getElementById("imagess");
            // Displaying the image box
            document.getElementById("image-box1").style.display = "block";
            // Displaying the Crop buttton
            document.getElementById("crop-btn1").style.display = "block";
            // Hiding the Post button
            document.getElementById("imgView1").style.display = "block";
            const cropper1 = new Cropper(image1, {
                autoCropArea: 1,
                viewMode: 1,
                scalable: false,
                zoomable: false,
                movable: false,
                minCropBoxWidth: 50,
                minCropBoxHeight: 50,
            });
            // When crop button is clicked this event will get triggered
            crop_btn1.addEventListener("click", () => {
                // This method coverts the selected cropped image on the cropper canvas into a blob object
                cropper1.getCroppedCanvas().toBlob((blob) => {
                    // Gets the original image data
                    let fileInputElement1 = document.getElementById("id_image1");
                    // Make a new cropped image file using that blob object, image_data.name will make the new file name same as original image
                    let file1 = new File([blob], img_data1.name, {
                        type: "image/*",
                        lastModified: new Date().getTime(),
                    });
                    // Create a new container
                    let container1 = new DataTransfer();
                    // Add the cropped image file to the container
                    container1.items.add(file1);
                    // Replace the original image file with the new cropped image file
                    fileInputElement1.files = container1.files;
                    document.getElementById("imgView1").src = URL.createObjectURL(
                        fileInputElement1.files[0]
                    );
                    // Hide the cropper box
                    document.getElementById("image-box1").style.display = "none";
                    // Hide the crop button
                    document.getElementById("crop-btn1").style.display = "none";

                });
            });
        });
        ///////////////////////////////////////////////
        function changeImg2(event) {

            document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
        }
        const imagebox2 = document.getElementById("image-box2");
        const crop_btn2 = document.getElementById("crop-btn2");
        const input2 = document.getElementById("id_image2");

        // When user uploads the image this event will get triggered
        input2.addEventListener("change", () => {
            // Getting image file object from the input variable
            const img_data2 = input2.files[0];
            // createObjectURL() static method creates a DOMString containing a URL representing the object given in the parameter.
            // The new object URL represents the specified File object or Blob object.
            const url2 = URL.createObjectURL(img_data2);
            // Creating a image tag inside imagebox which will hold the cropping view image(uploaded file) to it using the url created before.
            imagebox2.innerHTML = `<img src="${url2}" id="imagesss" style="width:100%;">`;
            // Storing that cropping view image in a variable
            const image2 = document.getElementById("imagesss"); 
            // Displaying the image box
            document.getElementById("image-box2").style.display = "block";
            // Displaying the Crop buttton
            document.getElementById("crop-btn2").style.display = "block";
            // Hiding the Post button
            document.getElementById("imgView2").style.display = "block";
            const cropper2 = new Cropper(image2, {
                autoCropArea: 1,
                viewMode: 1,
                scalable: false,
                zoomable: false,
                movable: false,
                minCropBoxWidth: 50,
                minCropBoxHeight: 50,
            });
            // When crop button is clicked this event will get triggered
            crop_btn2.addEventListener("click", () => {
                // This method coverts the selected cropped image on the cropper canvas into a blob object
                cropper2.getCroppedCanvas().toBlob((blob) => {
                    // Gets the original image data
                    let fileInputElement2 = document.getElementById("id_image2");
                    // Make a new cropped image file using that blob object, image_data.name will make the new file name same as original image
                    let file2 = new File([blob], img_data2.name, {
                        type: "image/*",
                        lastModified: new Date().getTime(),
                    });
                    // Create a new container
                    let container2 = new DataTransfer();
                    // Add the cropped image file to the container
                    container2.items.add(file2);
                    // Replace the original image file with the new cropped image file
                    fileInputElement2.files = container2.files;
                    document.getElementById("imgView2").src = URL.createObjectURL(
                        fileInputElement2.files[0]
                    );
                    // Hide the cropper box
                    document.getElementById("image-box2").style.display = "none";
                    // Hide the crop button
                    document.getElementById("crop-btn2").style.display = "none";

                });
            });
        });
    </script>

    <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/0.8.1/cropper.min.js"></script> -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.js"></script>

    <%-include('footer')-%>